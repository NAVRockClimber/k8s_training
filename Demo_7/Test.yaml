apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: my-nginx-app
  name: my-nginx
---
apiVersion: v1
data:
  html-url: https://raw.githubusercontent.com/NAVRockClimber/k8s_training/main/Demo_4/index.html
kind: ConfigMap
metadata:
  labels:
    app: my-nginx-app
  name: nginx
  namespace: my-nginx
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: my-nginx-app
  name: nginx
  namespace: my-nginx
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app: my-nginx-app
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: my-nginx-app
  name: nginx
  namespace: my-nginx
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
  storageClassName: azurefile-csi
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-nginx-app
  name: nginx-deployment
  namespace: my-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-nginx-app
  template:
    metadata:
      labels:
        app: my-nginx-app
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - image: public.ecr.aws/nginx/nginx:1.23.0
        name: nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 50m
            memory: 25Mi
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: nginx-volume
      initContainers:
      - command:
        - sh
        - -c
        - curl $htmlurl -o /usr/share/nginx/html/index.html
        env:
        - name: htmlurl
          valueFrom:
            configMapKeyRef:
              key: html-url
              name: nginx
        - name: my-env
          value: my-value
        image: public.ecr.aws/nginx/nginx:1.23.0
        name: copy-html
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: nginx-volume
      volumes:
      - name: nginx-volume
        persistentVolumeClaim:
          claimName: nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/rewrite-target: /
  labels:
    app: my-nginx-app
  name: nginx
  namespace: my-nginx
spec:
  rules:
  - host: ppi-demo.westeurope.cloudapp.azure.com
    http:
      paths:
      - backend:
          service:
            name: nginx-service
            port:
              number: 80
        path: /hello
        pathType: Prefix
  tls:
  - hosts:
    - ppi-demo.westeurope.cloudapp.azure.com
